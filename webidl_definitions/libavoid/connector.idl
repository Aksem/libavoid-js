enum Avoid_ConnType {
  "Avoid::ConnType_None",
  "Avoid::ConnType_PolyLine",
  "Avoid::ConnType_Orthogonal"
};

[Prefix="Avoid::"]
interface Checkpoint {
  void Checkpoint([Ref] Point p);
};

// callback for setCallback method
callback ConnRefCallback = void (VoidPtr ptr);

[Prefix="Avoid::"]
interface ConnRef {
  void ConnRef(Router router, [Ref] ConnEnd src, [Ref] ConnEnd dst, optional unsigned long id = 0);

  [Const] unsigned long id();

  void setCallback(ConnRefCallback cb, VoidPtr ptr);

  void setSourceEndpoint([Ref] ConnEnd srcPoint);
  void setDestEndpoint([Ref] ConnEnd dstPoint);

  [Const] Avoid_ConnType routingType();
  void setRoutingType(Avoid_ConnType type);

  [Ref] PolyLine displayRoute();

  void setHateCrossings(boolean value);
  [Const] boolean doesHateCrossings();
};
